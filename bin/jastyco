#!/usr/bin/env node

var fs = require('fs');
var program = require('commander');
var jastyco = require('../src/jastyco.js');
var cwd = process.cwd();

var defaultPatterns = '**/*.jade **/*.coffee **/*.styl';
var config = {},
  configPath = cwd + '/jastyco.json';

function extend(one, two) {
  var extended = {}, key;
  for (key in one) {
    extended[key] = one[key];
  }
  for (key in two) {
    extended[key] = two[key];
  }
  return extended;
}

program
  .option('-b, --build', 'compile sources')
  .option('-s, --src <src>', 'source directory. current default')
  .option('-d, --dest <dest>', 'destination directory. current default')
  .option('-p, --patterns <patterns>', 'files patterns. "' + defaultPatterns + '" default')
  .option('-c, --config <config>', 'config file. "jastyco.json" default')
  .usage('[options] patterns');

program.parse(process.argv);

var options = {
  build: program.build || false,
  src: program.src || '',
  dest: program.dest || '',
  patterns: program.patterns || program.args[0] || defaultPatterns
};

if (program.config) {
  configPath = cwd + '/' + program.config;
}

if (fs.existsSync(configPath)) {
  // allow json strict mode
  config = JSON.parse(fs.readFileSync(configPath).toString());
}

options = extend(options, config);

jastyco.jastyco(options);
